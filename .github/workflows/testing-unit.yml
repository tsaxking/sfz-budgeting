name: Unit Tests

on:
  workflow_call:
    # secrets:
    #   GH_TOKEN:
    #     description: 'GitHub Token'
    #     required: true
  push:
    branches:
      - '*'
      - '!deploy'
      - '!gh-pages'

permissions:
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v22.12.0

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile

      - name: Set up Docker Compose
        run: |
          docker compose version || sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o ./docker-compose.yml
          sudo chmod +x ./docker-compose.yml

      - name: Load .env variables
        run: |
          touch .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASS=postgres" >> .env
          echo "DB_NAME=postgres" >> .env
          echo "PUBLIC_APP_NAME=test" >> .env
          export $(cat .env | xargs)

      - name: Start database service
        run: docker compose up -d

      - name: Wait for database
        run: |
          until docker exec $(docker ps -q -f name=db) pg_isready -U postgres; do
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run migrations
        run: |
          pnpm run db:migrate
          pnpm run db:push --strict --verbose --force

      - name: Run Vitest tests
        run: npm run test:unit

      - name: Stop database service
        if: always()
        run: docker compose down
